@page "/LayoutFlashy"
@inject TodoService TodoService

@rendermode InteractiveServer

<!-- NY DESIGN -->
<div class="grid-container">
    <div class="vertical-container">
        <div class="box box1">
        box1222
        <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(2)">
                <h4>Todo List 2</h4>
                <ul>
                    @foreach (var todo in TodoService.TodoList2)
                    {
                        <li draggable="true" @ondragstart="() => OnDragStart(todo)">
                            @if (todo.IsEditing)
                            {
                                <input @bind="todo.Text" />
                                <button @onclick="() => SaveEdit(todo)">Spara</button>
                                <button @onclick="() => RemoveTodo(todo)">Ta bort</button>
                            }
                            else
                            {
                                <span @onclick="() => ToggleEdit(todo)">@todo.Text</span>
                                @if (todo.ShowEditButton)
                                {
                                    <button @onclick="() => StartEdit(todo)">Ändra</button>
                                }
                            }
                        </li>
                    }
                </ul>
            </div>
        
        </div>
        <div class="box box2">
        box2
         <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(3)">
                <h4>Todo List 3</h4>
                <ul>
                    @foreach (var todo in TodoService.TodoList3)
                    {
                        <li draggable="true" @ondragstart="() => OnDragStart(todo)">
                            @if (todo.IsEditing)
                            {
                                <input @bind="todo.Text" />
                                <button @onclick="() => SaveEdit(todo)">Spara</button>
                                <button @onclick="() => RemoveTodo(todo)">Ta bort</button>
                            }
                            else
                            {
                                <span @onclick="() => ToggleEdit(todo)">@todo.Text</span>
                                @if (todo.ShowEditButton)
                                {
                                    <button @onclick="() => StartEdit(todo)">Ändra</button>
                                }
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="box box3">
      <div>
                <input @bind="newTodoText" placeholder="Skriv en uppgift" />
                <select @bind="selectedList">
                    <option value="1">Todo List 1</option>
                    <option value="2">Todo List 2</option>
                    <option value="3">Todo List 3</option>
                </select>
                <button @onclick="AddTodo">Lägg till</button>
            </div>
            <div class="list-container" ondragover="event.preventDefault()" @ondrop="() => OnDrop(1)">
                <h4>Todo List 1</h4>
                <ul>
                
                    @foreach (var todo in TodoService.TodoList1)
                    {
                        <li draggable="true" @ondragstart="() => OnDragStart(todo)">
                            @if (todo.IsEditing)
                            {
                                <input @bind="todo.Text" />
                                <button @onclick="() => SaveEdit(todo)">Spara</button>
                                <button @onclick="() => RemoveTodo(todo)">Ta bort</button>
                            }
                            else
                            {
                                <span @onclick="() => ToggleEdit(todo)">@todo.Text</span>
                                @if (todo.ShowEditButton)
                                {
                                    <button @onclick="() => StartEdit(todo)">Ändra</button>
                                }
                            }
                        </li>
                    }
                </ul>
            </div>
        </div>
   
    
</div>
@code {
    private string newTodoText = string.Empty;
    private int selectedList = 1;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodoText))
        {
            TodoService.AddTodo(selectedList, newTodoText);
            newTodoText = string.Empty; // Clear the input field after adding the todo
            StateHasChanged(); // Update the UI
        }
    }

    private void OnDragStart(TodoItem todo)
    {
        TodoService.StartDrag(todo); // Call the method in TodoService
    }

    private void OnDrop(int targetListNumber)
    {
        TodoService.DropTodoItem(targetListNumber); // Call the method in TodoService
        StateHasChanged(); // Update the UI
    }

    private void ToggleEdit(TodoItem todo)
    {
        // Växla om "Ändra"-knappen ska visas eller inte
        todo.ShowEditButton = !todo.ShowEditButton;
        StateHasChanged(); // Update the UI
    }

    private void StartEdit(TodoItem todo)
    {
        todo.IsEditing = true; // Start editing when "Ändra" is clicked
        todo.ShowEditButton = false; // Hide the "Ändra" button
        StateHasChanged(); // Update the UI
    }

    private void SaveEdit(TodoItem todo)
    {
        todo.IsEditing = false; // Save the edit and close the input field
        StateHasChanged(); // Update the UI
    }

    private void RemoveTodo(TodoItem todo)
    {
        TodoService.RemoveTodo(todo);
        StateHasChanged(); // Update the UI after removing
    }
}
